<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-000000140c0a</Id>
    <Library_Id>c037d0d2-0617-44f3-b846-21dc3d02c4f8</Library_Id>
    <Title>Parameter Tampering</Title>
    <Category />
    <Phase />
    <Technology>Java</Technology>
    <Type>Landing Page</Type>
    <DirectLink>Parameter Tampering</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Description==

A Parameter Tampering vulnerability occurs when an attacker can modify parameters used by a web application that have security implications. For example, a vulnerable application may allow an attacker to change his user id by changing request parameters. The vulnerability stems from relying on user-accessible parameters to store security sensitive information. Common areas vulnerable to parameter tampering vulnerabilities are data stored in cookies, hidden form fields, and HTTP request parameters. This vulnerability type applies to web applications. To prevent this problem, use platform provided session management, don't store sensitive data in user accessible parameters and use strong session identifiers. To check for this vulnerability, identify all user-mutable parameters and verify that tampering with them does not result in elevated privileges.

==Impact==

The exact impact of parameter tampering depends on what parameters are available for tampering. This vulnerability usually allows the attacker to change his status from regular user to admin. In that case the attacker is able to take full control of the application and its data. Another common impact is the attacker is able to change his user id to that of another user. In that case the attacker can access and modify the user's data and impersonate that user. Parameter tampering usually allows the attacker to impersonate any user of his choosing.

==Countermeasures==

Use platform-provided session management:
* [[0ed7310a-a0fd-4074-9c0f-37f48cf2bf4f|Use Session Management Offered by the Framework]]

Don't store sensitive data in user accessible parameters:
* [[9df0b518-f832-4a7c-9857-0517638c47db|Do Not Make Security Decisions Based on Client-Accessible Parameters]]

Use strong session identifiers:

==Checklists==

Platform-provided session management is used:
* [[3f2660b3-a935-4b4e-85ff-27ae28683f5b|Session Management Offered by the Framework Is Used]]

Sensitive data is not stored in user accessible parameters:
* [[4436e342-64d9-4b1b-ae9b-3e00696053fb|Security Decisions Are Not Made Based on Client-Accessible Parameters]]

Strong session identifiers are used:


==Additional Resources==

* For more information about parameter tampering, see https://www.owasp.org/index.php/Web_Parameter_Tampering]]></Data>
  </Content>
</TeamMentor_Article>