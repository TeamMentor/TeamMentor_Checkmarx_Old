<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>f3e5a2a3-3a1f-49a6-898d-ad0c946eb021</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1919 - R18 00 05 Unbounded Functions Of Library CString</Title>
    <Category>CWE: 10805</Category>
    <Phase>CPP MISRA CPP</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  10805</h1>
  <iframe height="500" src="/content/10805" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1919
Cwe : 10805
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1289
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /*
 MISRA CPP RULE 18-0-5
 ------------------
  The unbounded functions of library <cstring> shall not been used.

  The Example below shows code with vulnerability: 

  			#include <cstring>          
 	 			void fn (const char * pChar){
 	 				char array [10];
 					strcpy (array, pChar); //Non-compliant
				}

*/

CxList methods = Find_Methods();
return methods.FindByShortName("strcpy") +
	methods.FindByShortName("strcmp") +
	methods.FindByShortName("strcat") +
	methods.FindByShortName("strchr") +
	methods.FindByShortName("strspn") +
	methods.FindByShortName("strcspn") +
	methods.FindByShortName("strpbrk") +
	methods.FindByShortName("strrchr") +
	methods.FindByShortName("strstr") +
	methods.FindByShortName("strtok") +
	methods.FindByShortName("strlen");</cstring></cstring></pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>