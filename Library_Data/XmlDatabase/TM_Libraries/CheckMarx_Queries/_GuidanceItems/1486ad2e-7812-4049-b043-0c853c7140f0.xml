<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>1486ad2e-7812-4049-b043-0c853c7140f0</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>642 - ReDoS In Pattern</Title>
    <Category>CWE: 730</Category>
    <Phase>Java Medium Threat</Phase>
    <Technology>Java</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  730</h1>
  <iframe height="500" src="/content/730" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 642
Cwe : 730
IsExecutable : true
IsEncrypted : false
Severity : 2
PackageId : 37
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList evilStrings = Find_Evil_Strings();

// Find all regex commands
CxList regex = All.FindByMemberAccess("Pattern.compile");

// Find regex commands that are influenced by evil strings
CxList activeEvilRegexes = evilStrings.DataInfluencingOn(regex);

// Find all matches/splits of regexes
CxList match = All.FindByMemberAccess("Matcher.matches");
match = match.DataInfluencedBy(Find_Inputs());
CxList split = All.FindByMemberAccess("Pattern.split");
split = split.DataInfluencedBy(Find_Inputs());

// Find relevant matches
result = activeEvilRegexes.DataInfluencingOn(match + split);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>