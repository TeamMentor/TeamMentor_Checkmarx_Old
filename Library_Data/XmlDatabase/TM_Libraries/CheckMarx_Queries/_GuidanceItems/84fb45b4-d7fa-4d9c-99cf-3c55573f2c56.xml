<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>84fb45b4-d7fa-4d9c-99cf-3c55573f2c56</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1945 - R16 00 02 Define Only in Global Namespace</Title>
    <Category>CWE: 10770</Category>
    <Phase>CPP MISRA CPP</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  10770</h1>
  <iframe height="500" src="/content/10770" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1945
Cwe : 10770
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1289
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /* MISRA CPP RULE 16-0-2
 ------------------------------
 This query finds all macros that are defined not in the global namespace.
 
 The Example below shows code with vulnerability: 
      #ifndef MY_HDR   
      #define MY_HDR    //compliant
      namespace NS{
            #define foo //non-compliant
            #undef  foo //non-compliant	
     	}
*/


// finds all define and undef that are enclosed inside curly brackets

result = All.FindByRegex(@"#\s*(undef|define)\s+[^{]*}", All.NewCxList());</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>