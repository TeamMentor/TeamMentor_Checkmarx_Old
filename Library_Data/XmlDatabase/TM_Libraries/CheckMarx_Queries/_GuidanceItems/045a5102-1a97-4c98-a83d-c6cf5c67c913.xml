<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>045a5102-1a97-4c98-a83d-c6cf5c67c913</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1542 - Filtering Sensitive Logs</Title>
    <Category>CWE: 10602</Category>
    <Phase>Ruby Medium Threat</Phase>
    <Technology>Ruby</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  10602</h1>
  <iframe height="500" src="/content/10602" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1542
Cwe : 10602
IsExecutable : true
IsEncrypted : false
Severity : 2
PackageId : 1283
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList personal = Find_Personal_Info();
CxList paramsPersonal = personal.GetAncOfType(typeof(IndexerRef)).FindByShortName("params");

personal = personal.GetByAncs(paramsPersonal);

CxList filterParameterLogging = Find_Methods().FindByShortName("filter_parameter_logging");
CxList filterParameters = All.FindByMemberAccess("config.filter_parameters");
filterParameters = All.DataInfluencingOn(filterParameters);

CxList filtered = All.GetParameters(filterParameterLogging) + filterParameters;

CxList nonFiltered = All.NewCxList();
if (filtered.Count == 0)
{
	nonFiltered = personal;
}
else
{
	foreach (CxList p in personal)
	{
		CSharpGraph g = p.data.GetByIndex(0) as CSharpGraph;
		string name = g.ShortName.Trim(new char[] {'"'});
		if (filtered.FindByShortName(name.Trim(new char[] {'"'})).Count == 0)
		{
			nonFiltered += p;
		}
	}
}


// clean double results
foreach (CxList nf in nonFiltered)
{
	CSharpGraph g = nf.data.GetByIndex(0) as CSharpGraph;
	string name = g.ShortName.Trim(new char[] {'"'});
	if (result.FindByShortName(name).Count == 0)
	{
		result += nf;
	}
}</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>