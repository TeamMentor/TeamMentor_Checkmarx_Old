<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>4cb28ec5-6c4c-4cde-87c4-19d366dcd94a</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>52 - Hardcoded Password</Title>
    <Category>CWE: 259</Category>
    <Phase>Apex Low Visibility</Phase>
    <Technology>Apex</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  259</h1>
  <iframe height="500" src="/content/259" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 52
Cwe : 259
IsExecutable : true
IsEncrypted : false
Severity : 1
PackageId : 5
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList emptyString = Find_Empty_Strings();
CxList NULL = Find_Apex_Files().FindByName("null");
CxList psw = Find_Passwords();

// Find password in an initialization operation
CxList psw_in_lSide = psw.FindByAssignmentSide(CxList.AssignmentSide.Left);
CxList psw_in_lSide_decl = psw_in_lSide.FindByType(typeof(Declarator));

CxList strLiterals = Find_Strings() - emptyString - NULL;

//when the hardcoded string includes a space or dot we believe 
//it is not a password string
strLiterals -= strLiterals.FindByName("* *");
strLiterals -= strLiterals.FindByName("*.*");

CxList lit_in_rSide = strLiterals.FindByAssignmentSide(CxList.AssignmentSide.Right);

CxList initializedPassword = psw_in_lSide_decl.FindByInitialization(lit_in_rSide);

// Find password in an "equals" operation
CxList eq = All.FindByMemberAccess("String.equals");
eq *= psw.GetMembersOfTarget();
CxList equalsPassword = strLiterals.GetByAncs(eq);

eq = All.FindByMemberAccess("String.equals");
eq *= strLiterals.GetMembersOfTarget();
equalsPassword += psw.GetByAncs(eq);

CxList assignPassword = psw_in_lSide.GetAncOfType(typeof(AssignExpr));
assignPassword = lit_in_rSide.GetByAncs(assignPassword);

result = initializedPassword + equalsPassword + assignPassword;

result -= Find_Test_Code();</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>