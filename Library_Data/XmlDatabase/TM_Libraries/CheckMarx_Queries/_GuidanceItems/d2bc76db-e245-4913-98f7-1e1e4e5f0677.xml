<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>d2bc76db-e245-4913-98f7-1e1e4e5f0677</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1005 - Hardcoding Ids</Title>
    <Category>CWE: 10532</Category>
    <Phase>Apex Force com Code Quality</Phase>
    <Technology>Apex</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  10532</h1>
  <iframe height="500" src="/content/10532" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1005
Cwe : 10532
IsExecutable : true
IsEncrypted : false
Severity : 1
PackageId : 1001
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList emptyString = Find_Empty_Strings();
CxList NULL = Find_Apex_Files().FindByName("null");
CxList id = Find_Id() * Find_Apex_Files();

CxList id_in_lSide = id.FindByAssignmentSide(CxList.AssignmentSide.Left);
	
// Find id in an initialization operation
CxList id_in_Decl = id_in_lSide.FindByType(typeof(Declarator));

CxList strLiteralsAll = Find_Strings() - emptyString - NULL;
CxList strLiterals = All.NewCxList();
foreach (CxList strLiteral in strLiteralsAll)
{
	CSharpGraph literal = strLiteral.data.GetByIndex(0) as CSharpGraph;
	if ((literal.ShortName.Length == 22) || (literal.ShortName.Length == 19))
	{
		// The actual lengths are 15 and 18, but we add 2 per side for the quotes
		strLiterals += strLiteral;
	}
}


CxList lit_in_rSide = strLiterals.FindByAssignmentSide(CxList.AssignmentSide.Right);
CxList initializedId = id_in_Decl.FindByInitialization(lit_in_rSide);

// Find Id in assignment
CxList assignment = strLiterals.GetFathers().FindByType(typeof(AssignExpr));
CxList assignId = id_in_lSide.GetByAncs(assignment);

// Find id in an "equals" operation
CxList strEquals = All.FindByMemberAccess("String.equals", false);
CxList eq = strEquals * id.GetMembersOfTarget();
CxList equalsId = strLiterals.GetByAncs(eq);

eq = strEquals * strLiterals.GetMembersOfTarget();
equalsId += id.GetByAncs(eq);

CxList conditions = Get_Conditions().FindByType(typeof(BinaryExpr));
conditions = conditions.FindByShortName("==");

CxList conditionId = All.NewCxList();
strLiterals = strLiterals.GetByAncs(conditions);
id = id.GetByAncs(conditions);
foreach (CxList condition in conditions)
{
	if ((id.FindByFathers(condition).Count &gt; 0) &amp;&amp; (strLiterals.FindByFathers(condition).Count &gt; 0))
	{
		conditionId += strLiterals.GetByAncs(condition);
	}
}

CxList selectId = Find_Strings().GetByAncs(All.GetParameters(Find_DB_Inactive())).FindByShortName("*id = '*");

result = initializedId + assignId + equalsId + conditionId + selectId;

result -= Find_Test_Code();</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>