<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>4efedf08-0f22-43cf-9f5a-2e32c49ecbb9</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1972 - ESAPI Same Password Repeats Twice</Title>
    <Category>CWE: 521</Category>
    <Phase>Java Low Visibility</Phase>
    <Technology>Java</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  521</h1>
  <iframe height="500" src="/content/521" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1972
Cwe : 521
IsExecutable : true
IsEncrypted : false
Severity : 1
PackageId : 36
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /*
This query looks for a case where the same password from the user is given twice to the createUser ESAPI command:
 String password = request.getParameter("pwd");
 DefaultUser user = (DefaultUser)ESAPI.authenticator().createUser(name, password, password);

*/

CxList createUser = All.FindByMemberAccess("authenticator.createUser");

CxList inputs = Find_Interactive_Inputs();

// Find password parameters in createUser
CxList param1 = All.GetParameters(createUser, 1).FindByType(typeof(UnknownReference));
CxList param2 = All.GetParameters(createUser, 2).FindByType(typeof(UnknownReference));

// Leave only parameters that are influenced by input
param1 = param1 * param1.DataInfluencedBy(inputs);

// Filter to leave only relevant createParameters
createUser = createUser.FindByParameters(param1).FindByParameters(param2);

// Check for the places that have the same parameter twice
foreach (CxList create in createUser)
{
	CxList p1 = param1.GetParameters(create, 1);
	CxList p2 = param2.GetParameters(create, 2);
	if (p1.FindAllReferences(p2).Count &gt; 0)
	{
		result += p2.Concatenate(p1);
	}
}</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>