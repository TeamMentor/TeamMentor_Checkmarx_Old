<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>13f34e49-7e72-4501-9c2b-5adb8ecebd16</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>337 - Stored Buffer Overflow cpycat</Title>
    <Category>CWE: 120</Category>
    <Phase>CPP Stored Vulnerabilities</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  120</h1>
  <iframe height="500" src="/content/120" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 337
Cwe : 120
IsExecutable : true
IsEncrypted : false
Severity : 2
PackageId : 22
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList methods = Find_Methods();//.FindByFileName("*stro*");
CxList bofuncs = Find_BO_Funcs();

CxList strlenParams = All.GetParameters(Find_All_Strlen());
CxList firstParam = All.GetParameters(bofuncs, 0);
firstParam = All.GetByAncs(firstParam);	
CxList secondParam = All.GetParameters(bofuncs, 1);
secondParam = All.GetByAncs(secondParam);	
foreach (CxList bofunc in bofuncs)
{
	CxList sourceParam = secondParam.GetParameters(bofunc, 1);
	sourceParam = secondParam.GetByAncs(sourceParam);
	CxList destinationParam = firstParam.GetParameters(bofunc, 0);
	destinationParam = firstParam.GetByAncs(destinationParam);

	CxList strlenRelevantParams = strlenParams.DataInfluencingOn(sourceParam);
	CxList strlenSanitizer = destinationParam.DataInfluencedBy(All.FindByParameters(strlenRelevantParams));

	CxList sanitizer = All.GetParameters(bofunc.FindByParameters(strlenSanitizer),1);
	sanitizer = All.GetByAncs(sanitizer);
	result += (sourceParam - sanitizer).DataInfluencedBy(Find_Read() + Find_DB());
}</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>