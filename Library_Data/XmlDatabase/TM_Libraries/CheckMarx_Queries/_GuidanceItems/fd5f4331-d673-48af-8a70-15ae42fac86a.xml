<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>fd5f4331-d673-48af-8a70-15ae42fac86a</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1861 - R16 05 Function Prototype Declaration Without Parameters</Title>
    <Category>CWE: 11049</Category>
    <Phase>CPP MISRA C</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  11049</h1>
  <iframe height="500" src="/content/11049" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1861
Cwe : 11049
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1288
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /*
MISRA C RULE 16-5
------------------------------
This query searches for prototypes (such as function declarations) with no paramaters (should have void paramater)

	The Example below shows code with vulnerability: 

void foo () 
{
    int foo();    
}

*/

CxList methodDeclsAndDefs = All.FindByType(typeof(MethodDecl));
CxList methodDefs = All.FindByType(typeof(StatementCollection)).GetFathers().FindByType(typeof(MethodDecl));
CxList paramaters = All.GetParameters(methodDeclsAndDefs);
CxList methodDeclsWithParams = paramaters.GetAncOfType(typeof(MethodDecl));

// Remove method definitions, and remove method declarations with paramaters
result = methodDeclsAndDefs - (methodDefs + methodDeclsWithParams);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>