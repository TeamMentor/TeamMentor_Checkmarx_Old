<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>032e1cf3-ced0-4f63-9457-5fefda1cc7b8</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>2064 - Using Perl4 Package Names</Title>
    <Category>CWE: 0</Category>
    <Phase>Perl Best Coding Practice</Phase>
    <Technology>Perl</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 2064
Cwe : 0
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1291
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /*
see: https://www.securecoding.cert.org/confluence/display/perl/DCL05-PL.+Prohibit+Perl4+package+names
This noncompliant code example uses the Perl 4 ' syntax to import an external package.
This code does successfully require the package, but because Perl 5 is over 15 years ago,
the Perl 4 syntax has largely been forgotten. Consequently, the code can be seen as confusing or arcane.

require DBI'SQL'Nano;
*/

result = All.FindByRegex(@"require\s+\w+'");</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>