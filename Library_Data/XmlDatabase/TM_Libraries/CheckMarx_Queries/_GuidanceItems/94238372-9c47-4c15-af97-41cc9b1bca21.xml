<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>94238372-9c47-4c15-af97-41cc9b1bca21</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>23 - Find Interactive Outputs</Title>
    <Category>CWE: 0</Category>
    <Phase>General</Phase>
    <Technology>Apex</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 23
Cwe : 0
IsExecutable : false
IsEncrypted : false
Severity : 0
PackageId : 3
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList methods = Find_Methods();
CxList webMethods = methods.FindByFieldAttributes(Modifiers.WebService); 
CxList fd = All.FindByType(typeof(FieldDecl)) + All.FindByType(typeof(ConstantDecl));

result = fd.FindByFieldAttributes(Modifiers.WebService)
	+ Find_VF_O()
	+ Find_VF_I(); // When getting input, we also write to screen so it's output

CxList potentialInputs = methods.FindByShortName("pagereference")
	+ methods.FindByShortName("currentpagereference")
	+ methods.FindByShortName("currentpage")
	+ methods.FindByShortName("getcurrentpage");
potentialInputs = potentialInputs.GetMembersOfTarget();

result += potentialInputs.FindByShortName("setheaders") + 
	potentialInputs.FindByShortName("setparameters") + 
	potentialInputs.FindByShortName("setredirect") + 
	potentialInputs.FindByShortName("parameters").GetMembersOfTarget().FindByShortName("get") + 
	potentialInputs.FindByShortName("seturl");

result -= Find_Id();

result -= Find_Test_Code();</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>