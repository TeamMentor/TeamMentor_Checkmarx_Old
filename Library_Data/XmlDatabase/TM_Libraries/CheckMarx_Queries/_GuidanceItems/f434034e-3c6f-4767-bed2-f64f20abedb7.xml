<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>f434034e-3c6f-4767-bed2-f64f20abedb7</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>371 - Use Of Uninitialized Variables</Title>
    <Category>CWE: 457</Category>
    <Phase>CSharp Best Coding Practice</Phase>
    <Technology>CSharp</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  457</h1>
  <iframe height="500" src="/content/457" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 371
Cwe : 457
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 23
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> return result;

CxList cs = All.FindByFileName("*.cs");

CxList meth = cs.FindByType(typeof(MethodDecl));
CxList defaults = cs.FindByType(typeof(NullLiteral));
 
CxList fields = (cs.FindByType(typeof(Declarator)) - 
	cs.FindByType(typeof(Declarator)).GetByMethod(meth)).DataInfluencedBy(defaults);

fields = cs.FindAllReferences(fields);

CxList constr = cs.GetByAncs(cs.FindByType(typeof(ConstructorDecl)));

result = cs.FindDefinition( fields) - cs.FindDefinition( fields.DataInfluencedBy(constr));</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>