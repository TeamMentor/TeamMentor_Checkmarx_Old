<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>f98fe35d-ee1f-4a12-baa4-160219540a59</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>21 - Find Integers</Title>
    <Category>CWE: 0</Category>
    <Phase>General</Phase>
    <Technology>Apex</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 21
Cwe : 0
IsExecutable : false
IsEncrypted : false
Severity : 0
PackageId : 3
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> string[] types = {"integer", "long", "double", "decimal", "datetime", "date", "boolean", "id"};
CxList byTypes = All.FindByTypes(types);
/*	All.FindByType("integer") + 
	All.FindByType("long") + 
	All.FindByType("double") + 
	All.FindByType("decimal") + 
	All.FindByType("datetime") + 
	All.FindByType("date") + 
	All.FindByType("boolean") + 
	All.FindByType("id");
*/

CxList byNames =
	All.FindByShortName("*Length*", false) + 
	All.FindByShortName("*Index*", false);

// Add VF calls to methods (mostly getters) that return integer
CxList integers = byTypes.FindByFathers(All.FindByType(typeof(ReturnStmt)));
CxList objMethods = Find_Apex_Files().GetMethod(integers);
CxList integersGet = Find_VF_Pages().FindAllReferences(objMethods) - objMethods;

// Add find by return type
CxList methods = Find_Methods();
CxList methodInts = 
	All.FindByReturnType("integer") + 
	All.FindByReturnType("long") + 
	All.FindByReturnType("double") + 
	All.FindByReturnType("decimal") + 
	All.FindByReturnType("datetime") + 
	All.FindByReturnType("date") + 
	All.FindByReturnType("boolean") + 
	All.FindByReturnType("id");
methodInts = methods.FindAllReferences(methodInts);

CxList intValue = All.FindByShortName("intvalue", false) +
	All.FindByShortName("longvalue", false) +
	All.FindByShortName("doublevalue", false) +
	All.FindByShortName("parseint", false);

CxList stringIntegers = methods.FindByMemberAccess("string.compareto") + 
	methods.FindByMemberAccess("string.contains") +
	methods.FindByMemberAccess("string.endswith") +
	methods.FindByMemberAccess("string.equals") +
	methods.FindByMemberAccess("string.startswith");

result = byTypes + byNames + 
	Find_Boolean_Conditions() + 
	integersGet + 
	Find_sObject_Integers() + 
	methodInts + 
	intValue +
	stringIntegers;

result -= result.GetByAncs(All.GetParameters(Find_DB_Input()));</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>