<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>5799eb63-f150-4fb6-ab5c-2336008a5748</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1851 - R14 09 Not Compound If Or Else</Title>
    <Category>CWE: 11039</Category>
    <Phase>CPP MISRA C</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  11039</h1>
  <iframe height="500" src="/content/11039" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1851
Cwe : 11039
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1288
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /*
MISRA C RULE 14-9
------------------------------
This query searches for usage of if constructs that are not followed by a compound statements, or 
else keyword that are not followed by either a compound statement or another if statement.

	The Example below shows code with vulnerability: 

if (i&gt;5)
	i=10;

*/

CxList ifs = All.FindByType(typeof(IfStmt));

// remove ifs with a non empty compound statements
ifs -= All.FindByType(typeof(StatementCollection)).GetFathers();

// remove ifs with an empty compound statement
foreach(CxList cur in ifs){
	StatementCollection trueStmts = (cur.data.GetByIndex(0) as IfStmt).TrueStatements;
	if (trueStmts != null &amp;&amp; trueStmts.Count == 0){
		ifs -= cur;
	}
}
return ifs;</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>