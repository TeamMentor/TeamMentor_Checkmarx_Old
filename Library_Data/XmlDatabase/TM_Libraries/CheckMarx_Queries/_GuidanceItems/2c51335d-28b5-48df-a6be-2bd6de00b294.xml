<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>2c51335d-28b5-48df-a6be-2bd6de00b294</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>215 - Buffer Overflow fgets</Title>
    <Category>CWE: 120</Category>
    <Phase>CPP Buffer Overflow</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  120</h1>
  <iframe height="500" src="/content/120" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 215
Cwe : 120
IsExecutable : true
IsEncrypted : false
Severity : 3
PackageId : 15
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> //  Buffer Overflow - fgets
//  -----------------------
//  Find all the fgets insatnces that their length is affected by the user.
//  A sizeof sanitization is done.
///////////////////////////////////////////////////////////////////////////

// Find the inputs
CxList inputs = Find_Interactive_Inputs();

// The relevant method calls
CxList fgets = Find_Methods().FindByShortName("fgets");
CxList sizeofs = Find_Methods().FindByShortName("sizeof");

// Add only the fgets calls that do not contain sizeof
CxList sanitizedFgets = new CxList();
CxList secondParam = All.GetParameters(fgets ,1);
foreach (CxList fgetsInstance in fgets)
{
	CxList fgetsParam2 = secondParam.GetParameters(fgetsInstance ,1);
	CxList sanitization = sizeofs.GetByAncs(fgetsParam2);
	if (sanitization.Count == 0)
	{
		sanitizedFgets += fgetsInstance;
	}
}

// Find the sanitized list of fgets, affected by the input
result = secondParam.GetParameters(sanitizedFgets ,1).DataInfluencedBy(inputs);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>