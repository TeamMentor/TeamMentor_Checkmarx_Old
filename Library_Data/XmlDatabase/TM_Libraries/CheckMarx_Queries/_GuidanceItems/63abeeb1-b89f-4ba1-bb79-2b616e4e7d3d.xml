<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>63abeeb1-b89f-4ba1-bb79-2b616e4e7d3d</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>333 - Use of Zero Initialized Pointer</Title>
    <Category>CWE: 457</Category>
    <Phase>CPP Medium Threat</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  457</h1>
  <iframe height="500" src="/content/457" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 333
Cwe : 457
IsExecutable : true
IsEncrypted : false
Severity : 2
PackageId : 21
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> //	Use of uninitialized pointer
//  ----------------------------
//  In this query we look for NULL-initialized pointers, that the user
//  tries to use although they have no actual value in this address.
///////////////////////////////////////////////////////////////////////

// Find all zero-initializers
CxList declarators = All.FindByType(typeof(Declarator));
CxList initZero = All.GetByAncs(declarators);
initZero = initZero.FindByShortName("NULL");
	
// Find all pointers
CxList pointers = All.FindByType(typeof(UnaryExpr)).FindByShortName("Pointer");
CxList addresses = All.FindByType(typeof(UnaryExpr)).FindByShortName("Address");

// See all the cases where the pointers are affected by this initialized value
// (and not set beforehand)
result = pointers.DataInfluencedBy(initZero)
	- pointers.DataInfluencedBy(addresses);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>