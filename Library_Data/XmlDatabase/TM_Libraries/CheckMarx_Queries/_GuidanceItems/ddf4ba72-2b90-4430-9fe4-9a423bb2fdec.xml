<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>ddf4ba72-2b90-4430-9fe4-9a423bb2fdec</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1537 - DB Tampering</Title>
    <Category>CWE: 20</Category>
    <Phase>Ruby Medium Threat</Phase>
    <Technology>Ruby</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  20</h1>
  <iframe height="500" src="/content/20" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1537
Cwe : 20
IsExecutable : true
IsEncrypted : false
Severity : 2
PackageId : 1283
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList commands = Find_MongoDB_Def().GetMembersOfTarget();

// 1. drop database
CxList dangerousCommands = commands.FindByShortName("drop_database");
CxList commandParams = All.GetByAncs(All.GetParameters(dangerousCommands, 0));

CxList inputs = Find_Interactive_Inputs() + Find_Strings();
CxList sanitize = Find_Integers();

// 2. tamper with administrative rights
CxList admin = commands.FindByShortName("admin");
CxList adminRef = All.GetByAncs(admin.GetAncOfType(typeof(AssignExpr))).FindByAssignmentSide(CxList.AssignmentSide.Left);
adminRef = All.FindAllReferences(adminRef) - admin;
adminRef += adminRef.GetMembersOfTarget();
adminRef += adminRef.GetMembersOfTarget();

commandParams += adminRef;
sanitize += admin;

// 3. createCollection
CxList createCollection = commands.FindByShortName("createCollection");
commandParams += All.GetParameters(createCollection);

result = 
	inputs * commandParams +
	commandParams.InfluencedByAndNotSanitized(inputs, sanitize);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>