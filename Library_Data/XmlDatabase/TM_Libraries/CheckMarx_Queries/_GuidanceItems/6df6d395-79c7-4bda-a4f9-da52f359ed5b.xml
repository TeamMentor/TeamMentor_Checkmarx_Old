<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>6df6d395-79c7-4bda-a4f9-da52f359ed5b</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>109 - Find Object</Title>
    <Category>CWE: 0</Category>
    <Phase>General</Phase>
    <Technology>ASP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 109
Cwe : 0
IsExecutable : false
IsEncrypted : false
Severity : 0
PackageId : 8
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> // $ASP

// Usage:
// Find_Object("ADODB.Stream")

// Sample code:
// Set obj = Server.CreateObject("ADODB.Stream")


if (param.Length == 1)
{
	string type = param[0] as string;
	string serverobj = "server.createobject";
	string obj = "createobject";
	
	CxList rightSide1 = All.FindByAssignmentSide(CxList.AssignmentSide.Right);
	rightSide1 = rightSide1.FindByMemberAccess(serverobj) + rightSide1.FindByShortName(obj);

	CxList relevantParam = All.FindByName(type, false);
	CxList relevantParamFunc = All.FindByParameters(relevantParam);
	CxList rightSide = rightSide1 * relevantParamFunc;
	
	CxList leftSide = rightSide.GetAncOfType(typeof(AssignExpr));
	leftSide = All.GetByAncs(leftSide).FindByAssignmentSide(CxList.AssignmentSide.Left);
	//leftSide = All.FindAllReferences(leftSide);

	result = leftSide;
}</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>