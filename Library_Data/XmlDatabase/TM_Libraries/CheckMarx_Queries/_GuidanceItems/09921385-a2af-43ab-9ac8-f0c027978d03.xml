<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>09921385-a2af-43ab-9ac8-f0c027978d03</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1392 - Buffer Overflow Indexes</Title>
    <Category>CWE: 120</Category>
    <Phase>CPP Buffer Overflow</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  120</h1>
  <iframe height="500" src="/content/120" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1392
Cwe : 120
IsExecutable : true
IsEncrypted : false
Severity : 3
PackageId : 15
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList inputs = Find_Interactive_Inputs();
CxList indexerRef = All.FindByType(typeof(IndexerRef));
CxList indexes = All.NewCxList();
foreach (CxList arrUse in indexerRef)
{              
	IndexerRef g = arrUse.data.GetByIndex(0) as IndexerRef;
	if (g != null)
	{
		indexes += All.FindById(g.Indices[0].NodeId);
	}
}
// Leon added: + Find_Methods().FindByShortName("strlen");
CxList sanitize = Get_Conditions() + Find_Methods().FindByShortName("strlen");
result = inputs.InfluencingOnAndNotSanitized(indexes, sanitize);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>