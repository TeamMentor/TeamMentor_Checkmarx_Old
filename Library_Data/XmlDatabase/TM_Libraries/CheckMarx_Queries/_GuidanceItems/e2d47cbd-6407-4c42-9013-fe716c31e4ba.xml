<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>e2d47cbd-6407-4c42-9013-fe716c31e4ba</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1952 - Add Get Attribute</Title>
    <Category>CWE: 0</Category>
    <Phase>General</Phase>
    <Technology>Java</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1952
Cwe : 0
IsExecutable : false
IsEncrypted : false
Severity : 0
PackageId : 32
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> if (param.Length == 1)
{
	CxList allInputs = param[0] as CxList;

	CxList getAttr = Get_Attribute();
/*		All.FindByMemberAccess("HttpServletRequest.getAttribute") +
		All.FindByName("*request.getAttribute") +
		All.FindByName("*Request.getAttribute");

	CxList getSession = All.FindByMemberAccess("request.getSession") +
		All.FindByName("*request.getSession") +
		All.FindByName("*Request.getSession");

	getAttr += getSession.GetMembersOfTarget().FindByShortName("getAttribute");
	getAttr += All.FindByMemberAccess("Session.getAttribute");
	getAttr += All.FindByName("*session.getAttribute", false);
	getAttr += All.FindByName("*session.get", false);
	getAttr += All.FindByMemberAccess("session.get");
*/
	CxList setAttr = Set_Attribute();
/*		All.FindByMemberAccess("HttpServletResponse.setAttribute") +
		All.FindByName("*response.setAttribute") +
		All.FindByName("*Response.setAttribute");
	setAttr += getSession.GetMembersOfTarget().FindByShortName("setAttribute");
	setAttr += All.FindByMemberAccess("Session.setAttribute");
	setAttr += All.FindByName("*session.setAttribute", false);
	setAttr += All.FindByName("*session.put", false);
	setAttr += All.FindByMemberAccess("Session.put");
*/
	setAttr = setAttr.DataInfluencedBy(allInputs);

	CxList setStrings = Find_Strings().GetParameters(setAttr, 0);
	CxList getStrings = Find_Strings().GetParameters(getAttr, 0);
	CxList setConstants = All.GetParameters(setAttr, 0).FindAllReferences(All.FindByType(typeof(ConstantDecl)));
	CxList getConstants = All.GetParameters(getAttr, 0).FindAllReferences(All.FindByType(typeof(ConstantDecl)));

	CxList decl = getAttr.GetAncOfType(typeof(Declarator));
	CxList references = All.FindAllReferences(decl).FindByAssignmentSide(CxList.AssignmentSide.Left).DataInfluencedBy(allInputs);
	decl = decl.FindDefinition(references);
	setConstants += All.GetParameters(getAttr.GetByAncs(decl));

	char[] trimChars = new char[6] {' ', '\t', '"', '(', '\r', '\n'};
	ArrayList str1 = new ArrayList();
	foreach (CxList setA in setStrings)
	{
		CSharpGraph gr = setA.data.GetByIndex(0) as CSharpGraph;
		string name = gr.ShortName.Trim(trimChars);
		if (!str1.Contains(name))
		{
			str1.Add(name);
		}
	}

	ArrayList str2 = new ArrayList();
	foreach (CxList setA in setConstants)
	{
		CSharpGraph gr = setA.data.GetByIndex(0) as CSharpGraph;
		string name = gr.ShortName.Trim(trimChars);
		if (!str2.Contains(name))
		{
			str2.Add(name);
		}
	}

	CxList attrInput = All.NewCxList();
	foreach (String s in str1)
	{
		attrInput += getStrings.FindByShortName("\"" + s + "\"");
	}

	foreach (String s in str2)
	{
		attrInput += getConstants.FindByShortName(s);
	}

	result = getAttr.FindByParameters(attrInput);
}</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>