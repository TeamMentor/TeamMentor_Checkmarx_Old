<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>04cb4b54-5533-4c90-aefe-cfc4378c13a1</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1394 - Potential Off by One Error in Loops</Title>
    <Category>CWE: 193</Category>
    <Phase>CPP Heuristic</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  193</h1>
  <iframe height="500" src="/content/193" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1394
Cwe : 193
IsExecutable : true
IsEncrypted : false
Severity : 1
PackageId : 17
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> //	OffByOne - loops
//  -----------------
//  Find all the loops that have "<_3d_22_ of="" instead=""></_3d_22_><_22_2c_ dealing="" by="" in="" problem.="" use="" on="" run="" an="" one="" _performance2c_="" thus="" iterations="" _7b_="" alliterationsmembers="All.GetByAncs(iterations);" to="" every="" find="" check="" for="" members="" are="" with="" _28_cxlist="" we="" a="" keep="" _28_for="" _anymore29_="" iteration="" vulnerability="" potential="" _iterations29_="" not="" all="" loop="" creating="" off="" and="" problem="" foreach="" the="" cxlist="" if="" look="" _iterations2f_loops=""></_22_2c_><_3d_22_29_ iter="iteration.data.GetByIndex(0)" _iterationstmt3b_="" _28_28_iter.test="" _21_="null)" if="" iterationstmt="" _26_26_="" as=""></_3d_22_29_><_3d_22_29_29_29_ of="" _28_val.findbyshortname28_22_022_29_.count="" _2b_="iterationMembers.FindById(stmt.NodeId);" exists="" _foreach28_statement="" value="" _7b_="" _7d_="" _it27_s="" stmt="" current="" initexpr="" initializing="" all="" val="iterationMembers.GetByAncs(initExpr).FindByAssignmentSide(CxList.AssignmentSide.Right);" a="" problematic="" find="" loop.="" members="" _cxlist28_29_3b_="" then="" keep="" initialization="" iteration="" iterationmembers="allIterationsMembers.GetByAncs(iteration);" _28_performance29_="" _iter.init29_="" _02c_="" in="" expression="" the="" cxlist="" if="" probably="" values=""> 0)
		{
			result += iterationMembers.FindById(iter.Test.NodeId);
		}
	}
}</_3d_22_29_29_29_></pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>