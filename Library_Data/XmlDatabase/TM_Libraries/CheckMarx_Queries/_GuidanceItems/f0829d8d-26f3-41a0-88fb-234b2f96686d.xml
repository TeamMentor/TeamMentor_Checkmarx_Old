<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>f0829d8d-26f3-41a0-88fb-234b2f96686d</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>378 - Find DB Heuristic</Title>
    <Category>CWE: 0</Category>
    <Phase>General</Phase>
    <Technology>CSharp</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 378
Cwe : 0
IsExecutable : false
IsEncrypted : false
Severity : 0
PackageId : 24
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList strings = Find_Strings();
strings -= strings.FindByName("* the *", false); // try to remove English sentences
strings -= strings.FindByName("* this *", false); // try to remove English sentences
strings -= strings.FindByName("* you *", false); // try to remove English sentences
strings -= strings.FindByName("* your *", false); // try to remove English sentences
strings -= strings.FindByName("", false);
strings -= strings.FindByName(" ", false);

char[] trimChars = new char[6] {' ', '\t', '"', '(', '\r', '\n'};

CxList SQL = strings.FindByName("*select *", false);
CxList SQLLines = All.NewCxList();
foreach (CxList sql in SQL)
{
	CSharpGraph gr = sql.data.GetByIndex(0) as CSharpGraph;
	string name = gr.ShortName.TrimStart(trimChars);
	if (name.ToLower().StartsWith("select"))
	{
		SQLLines += sql;
	}
}

SQL = strings.FindByName("*update *", false);
foreach (CxList sql in SQL)
{
	CSharpGraph gr = sql.data.GetByIndex(0) as CSharpGraph;
	string name = gr.ShortName.TrimStart(trimChars);
	if (name.ToLower().StartsWith("update"))
	{
		SQLLines += sql;
	}
}

SQLLines += strings.FindByName("*insert into*", false);
SQLLines += strings.FindByName("*delete from*", false);

CxList potentialBD = Find_DB_Methods();

result = potentialBD.DataInfluencedBy(SQLLines);

if (result.Count &gt; 0)
{
	result -= Find_DB();
	result -= result.DataInfluencedBy(result);
	result -= result.DataInfluencedBy(Find_DB());
}</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>