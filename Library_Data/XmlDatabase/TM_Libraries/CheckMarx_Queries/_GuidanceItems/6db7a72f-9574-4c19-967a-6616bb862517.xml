<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>6db7a72f-9574-4c19-967a-6616bb862517</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1874 - R19 17 Preprocessor If And Else Operators Reside In Different Files</Title>
    <Category>CWE: 11062</Category>
    <Phase>CPP MISRA C</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  11062</h1>
  <iframe height="500" src="/content/11062" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1874
Cwe : 11062
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1288
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /*
MISRA C RULE 19-17
------------------------------
This query searches for usage of preprocessing directives relating to same object but not in same file

	The Example below shows code with vulnerability: 

#if A
#endif
#endif

int main(int argc, char *argv[])
{
...
}

*/

// find all relevant directives, by order
CxList extendedResult = All.NewCxList();
CxList res = All.FindByRegex(@"#if|#elif|#else|#endif", false, false, false, extendedResult);

CxList notInSameFileAsTheIf = All.NewCxList();

// go over each file, count ifs/endifs to know if structure is legal
string oldFileName = "";
CxList lastDirectiveChecked = All.NewCxList();
int curIfCount = 0;

foreach (CxList cur in extendedResult){
	Comment curDirective = cur.data.GetByIndex(0) as Comment;
	if (curDirective == null || curDirective.FullName == null) {
		continue;
	}
	string curFileName = curDirective.LinePragma.FileName;

	// if new file starts, process old file data for open #ifs, and initialize data for current file
	if (String.Compare(curFileName, oldFileName) != 0){
		// this is where we find open #ifs
		if (curIfCount &gt; 0){
			notInSameFileAsTheIf += lastDirectiveChecked;
		}
		// new file data
		oldFileName = curFileName;
		curIfCount = 0;
	}

	// #if - adjust current #if count
	if (curDirective.FullName.IndexOf("#if") != -1){
		curIfCount++;
	}
	else{
		// #endif - adjust current #if count
		if (curDirective.FullName.IndexOf("#endif") != -1){
			curIfCount--;

			// negative if count means we're trying to close an #if form another file
			if (curIfCount </pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>