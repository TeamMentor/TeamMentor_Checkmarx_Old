<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>4833b144-919e-4ad2-a9b9-11ce5e1feb56</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1880 - R20 10 Using Atof Atoi Atol Functions From Stdlib H</Title>
    <Category>CWE: 11068</Category>
    <Phase>CPP MISRA C</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  11068</h1>
  <iframe height="500" src="/content/11068" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1880
Cwe : 11068
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1288
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /*
MISRA C RULE 20-10
------------------------------
This query searches for usage of the library functions 'atof', 'atoi' and 'atol' from library <stdlib.h>

	The Example below shows code with vulnerability: 

#include <stdlib.h>

void  mc2_2010 ( void )
{
  float64_t mc2_2010_a_to_float_result;
  int32_t   mc2_2010_a_to_int_result;
  int64_t   mc2_2010_a_to_long_result;

  mc2_2010_a_to_float_result = atof ( "123.5" );
  mc2_2010_a_to_int_result = atoi("12345");  
  mc2_2010_a_to_long_result = atol("12345");

*/

// Safety check for the violating h file
CxList includes = All.FindByType(typeof(StringLiteral)).GetParameters(Find_Methods()
	.FindByShortName("CX_INCL"));
CxList hFile = includes.FindByShortName("stdlib.h");
if (hFile.Count == 0)
	return result;

// Start with all instances of the functions
CxList methodInvokes = All.FindByType(typeof(MethodInvokeExpr));
CxList funcs = methodInvokes.FindByShortName("atof")+
	methodInvokes.FindByShortName("atoi")+
	methodInvokes.FindByShortName("atol");

// Remove all locally defined instances
CxList defs = All.FindDefinition(funcs);
funcs -= funcs.FindAllReferences(defs);

result = funcs;</stdlib.h></stdlib.h></pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>