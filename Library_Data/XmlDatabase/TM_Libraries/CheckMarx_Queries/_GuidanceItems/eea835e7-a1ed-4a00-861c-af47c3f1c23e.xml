<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>eea835e7-a1ed-4a00-861c-af47c3f1c23e</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1007 - Hardcoding Of Trigger Old</Title>
    <Category>CWE: 10534</Category>
    <Phase>Apex Force com Code Quality</Phase>
    <Technology>Apex</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  10534</h1>
  <iframe height="500" src="/content/10534" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1007
Cwe : 10534
IsExecutable : true
IsEncrypted : false
Severity : 1
PackageId : 1001
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList triggers = Find_Triggers_Code();
CxList triggerNew = triggers.FindByMemberAccess("trigger.Old", false);
CxList triggerIndexerRef = triggerNew.GetFathers().FindByType(typeof(IndexerRef));

// Find all indexes of Trigger.Old
CxList triggersIndexes = All.NewCxList();
foreach (CxList tr in triggerIndexerRef)
{
	IndexerRef ir = tr.data.GetByIndex(0) as IndexerRef;
	if (ir != null)
	{
		foreach (Expression ex in ir.Indices)
		{
			triggersIndexes += All.FindById(ex.NodeId).FindByShortName("0");
		}		
	}
}

result = triggerNew.GetByAncs(triggersIndexes.GetFathers());

result -= Find_Test_Code();</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>