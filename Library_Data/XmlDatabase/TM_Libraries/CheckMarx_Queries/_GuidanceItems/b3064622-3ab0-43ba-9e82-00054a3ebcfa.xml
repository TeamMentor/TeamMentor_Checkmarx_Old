<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>b3064622-3ab0-43ba-9e82-00054a3ebcfa</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>700 - Aptca Methods Call Non Aptca Methods</Title>
    <Category>CWE: 10022</Category>
    <Phase>VbNet Best Coding Practice</Phase>
    <Technology>VbNet</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  10022</h1>
  <iframe height="500" src="/content/10022" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 700
Cwe : 10022
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 42
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList allMethods = All.FindByType(typeof(MethodDecl));
CxList aptcaMethods = All.FindByCustomAttribute("allowpartiallytrustedcallersattribute").GetAncOfType(typeof(MethodDecl));
CxList nonAptcaMethods = allMethods - aptcaMethods;
CxList allMethodsCalls = All.FindAllReferences(allMethods) - allMethods;
CxList allNonAptcaMethods = allMethods - aptcaMethods;
CxList allNonAptcaMethodsCalls = All.FindAllReferences(allNonAptcaMethods) - allNonAptcaMethods;
result = allNonAptcaMethodsCalls.GetByAncs(aptcaMethods);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>