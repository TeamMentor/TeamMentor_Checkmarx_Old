<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>780ae1de-f282-4771-a860-5532d386ba86</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>2065 - Information Exposure Through an Error Message</Title>
    <Category>CWE: 209</Category>
    <Phase>Perl Low Visibility</Phase>
    <Technology>Perl</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  209</h1>
  <iframe height="500" src="/content/209" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 2065
Cwe : 209
IsExecutable : true
IsEncrypted : false
Severity : 1
PackageId : 1294
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> // Find all the errstr that appear in a "die" method
CxList die = Find_Methods().FindByShortName("die");
CxList errorMessages = All.FindByShortName("errstr").GetByAncs(die);

// All the eval statements
CxList eval = Find_Conditions().FindByShortName("EVAL").GetAncOfType(typeof(IfStmt));

// Ignoring die's in eval
errorMessages -= errorMessages.GetByAncs(eval);

// For each result, show it with the corresponding "die" method
foreach (CxList message in errorMessages)
{
	result += message.Concatenate(die.FindByParameters(message));
}</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>