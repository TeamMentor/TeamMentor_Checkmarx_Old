<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>482f6c65-5550-4598-be1c-e69f12bcd2be</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1678 - Stored LDAP Injection</Title>
    <Category>CWE: 90</Category>
    <Phase>Java Medium Threat</Phase>
    <Technology>Java</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  90</h1>
  <iframe height="500" src="/content/90" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1678
Cwe : 90
IsExecutable : true
IsEncrypted : false
Severity : 2
PackageId : 37
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList objCreate = Find_Object_Create();

CxList de = 
	objCreate.FindByName("*InitialDirContext") +
	objCreate.FindByName("*InitialContext") +
	objCreate.FindByName("*InitialLdapContext");

CxList ds = 
	All.FindByType("*SearchControls") + 
	All.FindByMemberAccess("DirContext.search") +
	All.FindByMemberAccess("LdapContext.search") +
	All.FindByMemberAccess("Context.lookup") +
	All.FindByMemberAccess("Context.extendedOperation") +
	All.FindByMemberAccess("Context.destroySubcontext") +
	All.FindByMemberAccess("Context.list") +
	All.FindByMemberAccess("Context.listBindings") +
	All.FindByMemberAccess("Context.rebind") +
	All.FindByMemberAccess("Context.removeFromEnvironment") +
	All.FindByMemberAccess("Context.rename") +
	All.FindByMemberAccess("Context.unbind") +
	All.FindByMemberAccess("Context.getAttributes") +
	All.FindByMemberAccess("Context.modifyAttributes");

CxList inputs = Find_Read();
CxList deParams = All.GetByAncs(de); 

CxList sanitize = Find_Integers() + 
	//regex to replace
	All.FindByMemberAccess("Matcher.replaceAll") +
	All.FindByMemberAccess("Matcher.replaceFirst") + 
	All.FindByMemberAccess("Matcher.appendReplacement") +
	//regex filter
	All.FindByMemberAccess("Matcher.group") +
	All.FindByMemberAccess("String.split") +
	All.FindByMemberAccess("Pattern.split"); 

result = deParams.InfluencedByAndNotSanitized(inputs, sanitize) + 
	ds.InfluencedByAndNotSanitized(inputs, sanitize);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>