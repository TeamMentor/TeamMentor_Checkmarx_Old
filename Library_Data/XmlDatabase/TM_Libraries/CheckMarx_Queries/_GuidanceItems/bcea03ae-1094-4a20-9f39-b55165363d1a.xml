<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>bcea03ae-1094-4a20-9f39-b55165363d1a</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>370 - Unclosed Objects</Title>
    <Category>CWE: 459</Category>
    <Phase>CSharp Best Coding Practice</Phase>
    <Technology>CSharp</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  459</h1>
  <iframe height="500" src="/content/459" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 370
Cwe : 459
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 23
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList close = Find_Methods().FindByName("*.close", false).FindByFileName("*worm.cs").FindByPosition(528);
CxList closeTarget = close.GetTargetOfMembers();
CxList definitions = All.FindDefinition(closeTarget);
CxList methods = All.GetMethod(closeTarget);
foreach (CxList target in closeTarget)
{
	CxList method = methods.GetMethod(target);
	CxList targetDefinition = definitions.FindDefinition(target);
	CxList targetInForEach = targetDefinition.GetAncOfType(typeof(ForEachStmt));
	CxList methodDef = method.GetMethod(targetDefinition);
	if (targetInForEach.Count &gt; 0 || methodDef.Count == 0)
	{
		close -= target.GetMembersOfTarget();
	}
}

CxList AllTrys = All.GetAncOfType(typeof(TryCatchFinallyStmt));
CxList fin = new CxList();	

foreach(CxList oneTry in AllTrys)
{
	TryCatchFinallyStmt t = oneTry.data.GetByIndex(0) as TryCatchFinallyStmt;
	fin += All.FindById(t.Finally.NodeId);	
}
fin = All.GetByAncs(fin);

CxList Try = close.GetAncOfType(typeof(TryCatchFinallyStmt));
foreach(CxList oneTry in Try)
{
	TryCatchFinallyStmt TryGraph = oneTry.data.GetByIndex(0) as TryCatchFinallyStmt;
	CxList curTry = All.FindById(TryGraph.Try.NodeId);
	CxList TryClose = close.GetByAncs(curTry);
	CxList AllClose = close.GetByAncs(oneTry);
	
	if( (AllClose - TryClose).Count == 0)
	{
		if (TryClose.GetAncOfType(typeof(UsingStmt)).Count == 0)
		{
			result += TryClose;
		}
	}	
}
 
result -= result.FindByFathers(fin);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>