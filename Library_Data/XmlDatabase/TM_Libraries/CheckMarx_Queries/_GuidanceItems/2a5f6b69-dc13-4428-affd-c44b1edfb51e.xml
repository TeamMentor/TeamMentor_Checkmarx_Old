<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>2a5f6b69-dc13-4428-affd-c44b1edfb51e</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>2044 - Stored Command Injection</Title>
    <Category>CWE: 77</Category>
    <Phase>Perl Medium Threat</Phase>
    <Technology>Perl</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  77</h1><iframe src='/content/77' width="100%" height="500"></iframe><h1>Checkmarx Rule</h1>
<div style='padding:10px'><pre>QueryId : 2044
Cwe : 77
IsExecutable : true
IsEncrypted : false
Severity : 2
PackageId : 1295
Status : Original
Type : Regular
</pre></div><h3>Source</h3><div style='padding:10px'><pre> CxList methods = Find_Methods();

// TODO: add backticks
CxList exec = methods.FindByShortName("exec");
CxList syscall = methods.FindByShortName("syscall");
CxList system = methods.FindByShortName("system");
CxList open = methods.FindByShortName("open");
CxList qx = methods.FindByShortName("qx");
CxList readpipe = methods.FindByShortName("readpipe");

CxList commands = exec + syscall + system + open + qx + readpipe;
CxList inputs = Find_DB_Out() + Find_Read();
CxList sanitize = All.GetByAncs(All.GetParameters(commands));
sanitize -= sanitize.GetByAncs(All.GetParameters(system, 0));
sanitize -= sanitize.GetByAncs(All.GetParameters(exec, 0));
CxList openParam2 = sanitize.GetByAncs(All.GetParameters(open, 1));
openParam2 -= openParam2.GetByAncs(openParam2.FindByShortName("<*").GetAncOfType(typeof(Param))); 
// 2nd parameter of open is a sanitizer
sanitize -= openParam2;
sanitize += Find_Integers();

result = commands.InfluencedByAndNotSanitized(inputs, sanitize);</pre></div>]]></Data>
  </Content>
</TeamMentor_Article>