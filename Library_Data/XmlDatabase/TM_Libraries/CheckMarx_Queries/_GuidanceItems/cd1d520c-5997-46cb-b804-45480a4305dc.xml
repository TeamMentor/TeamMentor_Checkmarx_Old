<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>cd1d520c-5997-46cb-b804-45480a4305dc</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>321 - Path Traversal</Title>
    <Category>CWE: 36</Category>
    <Phase>CPP Medium Threat</Phase>
    <Technology>CPP</Technology>
    <Type>With Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>TeamMentor page for: Path Traversal</h1>
  <iframe height="300" src="/html/Path_Traversal" width="100%">
  </iframe>
  <h1>Content for CWE ID:  36</h1>
  <iframe height="500" src="/content/36" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 321
Cwe : 36
IsExecutable : true
IsEncrypted : false
Severity : 2
PackageId : 21
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> if (CGI().Count &gt; 0) //web application (CGI)
{	
	CxList inputs = Find_Interactive_Inputs();
	CxList methodInvokes = Find_Methods();
	CxList files = Find_Open_Files_Methods() + 
		methodInvokes.FindByShortName("unlink"); //to open a file
	CxList firstParam = All.GetByAncs(All.GetParameters(files, 0));//only the first param of the method counts
	CxList stream = 
		All.FindByType("ifstream") + 
		All.FindByType("filebuf") + 
		All.FindByType("fstream") + 
		All.FindByType("ofstream");
	CxList def = All.FindDefinition(stream);

	CxList prob = firstParam + def;
	CxList create = All.FindByType(typeof(ObjectCreateExpr));
	CxList par = All.GetByAncs(create).InfluencingOn(create);
	CxList cond = Get_Conditions().FindAllReferences(par);
	prob -= prob.GetByAncs(cond.GetAncOfType(typeof(IfStmt)));

	CxList sanitize = Find_Sanitize();

	result = inputs.InfluencingOnAndNotSanitized(prob, sanitize);
}</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>