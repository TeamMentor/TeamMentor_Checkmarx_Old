<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>e9bd28d2-acd6-4a8a-92a0-61de2751220b</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1529 - Open Redirect</Title>
    <Category>CWE: 601</Category>
    <Phase>Ruby Low Visibility</Phase>
    <Technology>Ruby</Technology>
    <Type>With Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>TeamMentor page for: Open Redirect</h1>
  <iframe height="300" src="/html/Open_Redirect" width="100%">
  </iframe>
  <h1>Content for CWE ID:  601</h1>
  <iframe height="500" src="/content/601" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1529
Cwe : 601
IsExecutable : true
IsEncrypted : false
Severity : 1
PackageId : 1282
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList methods = Find_Methods();
CxList inputs = Find_Interactive_Inputs();
CxList sanitize = Find_Sanitize();

// redirect_to and link_to
CxList redirectFunctions = 
	methods.FindByShortName("redirect_to", false) +
	methods.FindByShortName("link_to", false);
CxList secondParam = All.GetByAncs(All.GetParameters(redirectFunctions, 1));
CxList secondParamTrue = secondParam.FindByShortName("true");
CxList secondParamOnlyPath = secondParam.FindByShortName("only_path");
CxList onlyPathTrue = secondParamTrue.GetAncOfType(typeof(Param)) * secondParamOnlyPath.GetAncOfType(typeof(Param));
redirectFunctions -= redirectFunctions.FindByParameters(onlyPathTrue);

// URI_Parser
CxList URIParser = All.FindByType("URI.Parser");
CxList URIParse = methods.FindByMemberAccess("URI.parse");
URIParse += URIParser.GetMembersOfTarget().FindByShortName("parse");
redirectFunctions += URIParse;

// update sanitizer to contain all but first param
CxList redirectParam = All.GetByAncs(All.GetParameters(redirectFunctions, 0));
sanitize += All.GetByAncs(All.GetParameters(redirectFunctions)) - redirectParam;

result = redirectFunctions.InfluencedByAndNotSanitized(inputs, sanitize);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>