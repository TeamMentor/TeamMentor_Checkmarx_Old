<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>f9d6b088-37e3-4399-a358-71502528dab1</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1812 - R02 02 CPP Comment Style</Title>
    <Category>CWE: 11000</Category>
    <Phase>CPP MISRA C</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  11000</h1>
  <iframe height="500" src="/content/11000" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1812
Cwe : 11000
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1288
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /*
MISRA C RULE 2-2
------------------------------
This query searches for CPP style "//" comments

	The Example below shows code with vulnerability: 

/* Function comment is compliant. * /
void mc2_0202 ( void )
{
use_int32(0);   // Comment Not Compliant
}

*/

CxList dummy;
CxList commentFinds = All.NewCxList();
CxList extendedResult = All.NewCxList();

// find instances of "//" comments
dummy = All.FindByRegex(@"//", true, false, false, extendedResult);

// remove "//" inside a "/* */" comment
dummy = All.FindByRegex(@"/\*.*?\*/", true, false, false, commentFinds);
extendedResult -= extendedResult.FindByRegexSecondOrder("//", commentFinds);

result = All.FindByRegexSecondOrder(@".*", extendedResult);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>