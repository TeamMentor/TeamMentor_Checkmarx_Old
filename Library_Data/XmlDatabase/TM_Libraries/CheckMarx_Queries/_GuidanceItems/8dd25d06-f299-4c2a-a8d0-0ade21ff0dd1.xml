<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>8dd25d06-f299-4c2a-a8d0-0ade21ff0dd1</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>509 - Use of Wrong Operator in String Comparison</Title>
    <Category>CWE: 597</Category>
    <Phase>Java Best Coding Practice</Phase>
    <Technology>Java</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  597</h1>
  <iframe height="500" src="/content/597" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 509
Cwe : 597
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 31
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList AllBinaryExpr = All.FindByType(typeof(BinaryExpr));
CxList cmp = AllBinaryExpr.GetByBinaryOperator(BinaryOperator.IdentityEquality) + 
			 AllBinaryExpr.GetByBinaryOperator(BinaryOperator.IdentityInequality);

CxList MethodInv = Find_Methods();
CxList AllMemberAccess = All.FindByType(typeof(MemberAccess));

CxList NULL = All.FindByName("null").FindByFathers(cmp).GetFathers();
CxList InvTargets = MethodInv.GetTargetOfMembers().FindByType("String"); 
CxList AllMemberAccessTargets = AllMemberAccess.GetTargetOfMembers().FindByType("String"); 

CxList stringsCompared = All.FindByType("String").FindByFathers(cmp - NULL) - InvTargets - AllMemberAccessTargets;

CxList binaryComparers = stringsCompared.GetAncOfType(typeof(BinaryExpr));

int count = 0;
while (binaryComparers.Count&gt;0 &amp;&amp; count++<_1029_ _7b_="" _cmp3b_="" binarycomparers="binaryComparers.GetFathers().GetAncOfType(typeof(BinaryExpr));" result="" _2a_="" _2b_="binaryComparers"></_1029_></pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>