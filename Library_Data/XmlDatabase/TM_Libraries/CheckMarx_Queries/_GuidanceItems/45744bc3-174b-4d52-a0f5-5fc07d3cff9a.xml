<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>45744bc3-174b-4d52-a0f5-5fc07d3cff9a</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1873 - R19 13 Pound Preprocessor Operator Is Used</Title>
    <Category>CWE: 11061</Category>
    <Phase>CPP MISRA C</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  11061</h1>
  <iframe height="500" src="/content/11061" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1873
Cwe : 11061
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1288
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /*
MISRA C RULE 19-13
------------------------------
This query searches for usage of the # or ## macro preprocessor operators

	The Example below shows code with vulnerability: 

#define mc2_1913A(x,y) (#x = (y))
#define mc2_1913B(x,y) (x##y = 0)

*/

result = All.FindByRegex(@"#define [^\n]*?#", false, false, false, All.NewCxList());</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>