<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>9c660004-fc76-453c-b813-1d4f427af7fd</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>216 - Buffer Overflow Loops</Title>
    <Category>CWE: 193</Category>
    <Phase>CPP Buffer Overflow</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  193</h1>
  <iframe height="500" src="/content/193" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 216
Cwe : 193
IsExecutable : true
IsEncrypted : false
Severity : 2
PackageId : 15
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList arrayCreate = All.FindByType(typeof(ArrayCreateExpr));
CxList inputs = Find_Interactive_Inputs();
CxList indexerRef = All.FindByType(typeof(IndexerRef));
CxList indexes = All.NewCxList();
foreach (CxList arrUse in indexerRef)
{              
	IndexerRef g = arrUse.data.GetByIndex(0) as IndexerRef;
	if (g != null)
	{
		indexes += All.FindById(g.Indices[0].NodeId);
	}
}

CxList indexDef = All.FindDefinition(indexes.GetFathers());
CxList iterations = All.FindByType(typeof(IterationStmt));
CxList allIntegers = All.FindByType(typeof(IntegerLiteral));
CxList integers = allIntegers.GetByAncs(iterations);
CxList conditions = Get_Conditions();
CxList inConditions = All.GetByAncs(conditions);

foreach (CxList iteration in iterations)
{
	try
	{
		IterationStmt iter = iteration.data.GetByIndex(0) as IterationStmt;
		if (iter.Test != null)
		{
			bool le = iter.Test.ShortName.Equals("<_3d_22_29_3b_ bool="" lt=""></_3d_22_29_3b_><_22_29_3b_ index="" limitliteral="limit.data.GetByIndex(0)" limitint="System.Int32.Parse(limitLiteral.Text);" _28_limitliteral="" _21_="null)" _28_le="" _7b_="" as="" _28_cxlist="" _28_defliteral="" _lt29_="" integerliteral="" defint="System.Int32.Parse(defLiteral.Text);" _integerliteral3b_="" _26_26_="" foreach="" _7c_7c_="" limit="integers.GetByAncs(cond);" defliteral="defIndexCxList.data.GetByIndex(0)" cond="conditions.FindById(iter.Test.NodeId);" defindexcxlist="allIntegers.GetByAncs(arrayDef).FindByType(typeof(IntegerLiteral));" _28_28_le="" indexlist="indexList.FindAllReferences(indexesInCond);" int="" _indexlist29_="" _28_defint="" arraydef="indexDef.FindDefinition(index.GetFathers());" indexesincond="inConditions.GetByAncs(cond).FindAllReferences(indexList);" cxlist="" if="" in=""></_22_29_3b_><_3d_ _26_26_="" _limitint29_29_="" _7c_7c_="" _28_defint="" _28_lt=""></_3d_></pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>