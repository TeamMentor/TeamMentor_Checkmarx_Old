<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>ba989231-5d1b-47cc-abb3-5c6ac66b34df</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1593 - Client Side Injection</Title>
    <Category>CWE: 89</Category>
    <Phase>Java Android</Phase>
    <Technology>Java</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  89</h1>
  <iframe height="500" src="/content/89" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1593
Cwe : 89
IsExecutable : true
IsEncrypted : false
Severity : 3
PackageId : 1285
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> // Query Client_Side_Injection
// ---------------------------
// The purpose of the query to find any attempt to keep
// unverified (not sanitized) information to the DataBase
// that came from the network, bluetooth, SMS and E-mails

CxList methods = Find_Methods();
CxList db = 	
	methods.FindByMemberAccess("SqLiteDataBase.delete*")+ 
	methods.FindByMemberAccess("SqLiteDataBase.query*")+ 
	methods.FindByMemberAccess("SqLiteDataBase.execSQL*") +
	methods.FindByMemberAccess("SqLiteDataBase.insert*")
	;

CxList inputs = Find_Read() + methods.FindByMemberAccess("SmsMessage.get*") + methods.FindByMemberAccess("Folder.get*");
CxList sanitized = 	Find_Sanitize();
result = All.FindSQLInjections(inputs, db, sanitized);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>