<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>c55f1fa3-7111-47d0-9876-46f02a5cb144</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1030 - inputText Ignoring FLS</Title>
    <Category>CWE: 10547</Category>
    <Phase>Apex Force com Serious Security Risk</Phase>
    <Technology>Apex</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  10547</h1>
  <iframe height="500" src="/content/10547" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1030
Cwe : 10547
IsExecutable : true
IsEncrypted : false
Severity : 2
PackageId : 1003
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> // VF files into a variable
CxList VF = Find_VF_Pages();

// Find setters for sObjects in a VF page
CxList sObjectSet = Find_sObjects().GetMembersOfTarget().FindByShortName("set*");

// Find problematic apex:inputText (which should have been inputField), and similar
CxList inputText = VF.FindByName("*.apex.inputtext.value")
	+ VF.FindByName("*.apex.inputtextarea.value")
	+ VF.FindByName("*.apex.inputhidden.value")
	+ VF.FindByName("*.apex.inputsecret.value");
 
// ...and BINGO!
result = inputText.InfluencedByAndNotSanitized(sObjectSet, Find_Test_Code());</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>