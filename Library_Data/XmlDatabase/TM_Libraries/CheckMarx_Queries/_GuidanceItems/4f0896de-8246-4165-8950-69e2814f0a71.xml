<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>4f0896de-8246-4165-8950-69e2814f0a71</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1871 - R19 06 Use Of Undef Derective</Title>
    <Category>CWE: 11059</Category>
    <Phase>CPP MISRA C</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  11059</h1>
  <iframe height="500" src="/content/11059" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1871
Cwe : 11059
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1288
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /*
MISRA C RULE 19-6
------------------------------
This query searches for usage of #undef

	The Example below shows code with vulnerability: 


#define size_macro 6
...
int i = size_acro;
...
#undef size_macro

}

*/

result = All.FindByRegex(@"#undef\W", false, false, false, All.NewCxList());</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>