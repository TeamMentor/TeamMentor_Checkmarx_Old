<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>6551ae83-1b54-4e5d-975f-d66684346b86</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1001 - Async Future Method Inside Loops</Title>
    <Category>CWE: 10530</Category>
    <Phase>Apex Force com Code Quality</Phase>
    <Technology>Apex</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  10530</h1>
  <iframe height="500" src="/content/10530" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1001
Cwe : 10530
IsExecutable : true
IsEncrypted : false
Severity : 1
PackageId : 1001
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList future = Find_Apex_Files().FindByCustomAttribute("future");
future = future.GetAncOfType(typeof(MethodDecl));

CxList methods = Find_Apex_Files().FindAllReferences(future.GetAncOfType(typeof(MethodDecl)));

int numMeth = 0;
for(int i = 0; i  numMeth; i++)
{
	numMeth = methods.Count;
	methods += Find_Apex_Files().FindAllReferences(methods.GetAncOfType(typeof(MethodDecl)));
}

CxList futurePlus = future + methods;

CxList iterations = futurePlus.GetAncOfType(typeof(IterationStmt)) + futurePlus.GetAncOfType(typeof(ForEachStmt));

CxList callsToFuture = futurePlus.GetByAncs(iterations);

foreach (CxList call in callsToFuture)
{
	CxList specificFuture = future.FindAllReferences(call);
	result += call.Concatenate(specificFuture);
}

result -= Find_Test_Code();</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>