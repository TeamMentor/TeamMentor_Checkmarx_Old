<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>7ea33e2b-29c0-495b-9603-354b44231d6a</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1869 - R19 03 Include Directive In Wrong Format</Title>
    <Category>CWE: 11057</Category>
    <Phase>CPP MISRA C</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  11057</h1>
  <iframe height="500" src="/content/11057" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1869
Cwe : 11057
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1288
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /*
MISRA C RULE 19-3
------------------------------
This query searches for '#include' directives followed by something other than a <filename> or "filename".

	The Example below shows code with vulnerability: 

#include header.h

*/

CxList includes = All.FindByType(typeof(StringLiteral)).GetParameters(Find_Methods()
	.FindByShortName("CX_INCL"));

// check for the wrong format flag
foreach (CxList cur in includes){
	StringLiteral g = (StringLiteral) cur.data.GetByIndex(0);
	if (g == null || g.Value == null) {
		continue;
	}
	string curFileName = g.Value;
	if (String.Compare(curFileName, "INVALID_INCLUDE_FILE_NAME_") == 0){
		result += cur;
	}
}</filename></pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>