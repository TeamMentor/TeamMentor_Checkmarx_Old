<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>64bea8d9-0835-4aba-af46-3e4c88b3ce75</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1872 - R19 12 Multiple Pound Or Double Pound In Same Macro</Title>
    <Category>CWE: 11060</Category>
    <Phase>CPP MISRA C</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  11060</h1>
  <iframe height="500" src="/content/11060" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1872
Cwe : 11060
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1288
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /*
MISRA C RULE 19-12
------------------------------
This query searches for instances of multiple # or ## preprocessor operators in a single macro definition.

	The Example below shows code with vulnerability: 

#define mc2_1912C(x,y) (#x = #y)
#define mc2_1912D(x,y) (x##y##y = 0)
#define mc2_1912E(x,y) (#x##1 = (y))
#define mc2_1912F(x,y) (x##y#y = 0)

*/

result = All.FindByRegex(@"#define [^\n]*?#[^\n]+?#", false, false, false, All.NewCxList());</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>