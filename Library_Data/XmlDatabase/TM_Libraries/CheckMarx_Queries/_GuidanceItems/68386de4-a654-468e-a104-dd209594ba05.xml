<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>68386de4-a654-468e-a104-dd209594ba05</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1405 - Reflection Injection</Title>
    <Category>CWE: 470</Category>
    <Phase>PHP High Risk</Phase>
    <Technology>PHP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  470</h1>
  <iframe height="500" src="/content/470" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1405
Cwe : 470
IsExecutable : true
IsEncrypted : false
Severity : 3
PackageId : 1272
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList methods = Find_Methods();
CxList interactiveInput = Find_Interactive_Inputs();

CxList ReflectionObjs = All.FindByType("Reflection*");

CxList InvokeTargets = methods.FindByShortName("invoke*").GetTargetOfMembers();

// Tainted Class names 
CxList reflectionClsObj = ReflectionObjs.FindByType("ReflectionClass");
reflectionClsObj = reflectionClsObj.InfluencedBy(interactiveInput);
CxList getNewInstanceTargets = methods.FindByShortName("newInstance*").GetTargetOfMembers();
CxList taintedreflectionClsObj = reflectionClsObj * getNewInstanceTargets;
result += taintedreflectionClsObj;

// Tainted Function names
CxList reflectionFuncObj = ReflectionObjs.FindByType("ReflectionFunction");
reflectionFuncObj = reflectionFuncObj.InfluencedBy(interactiveInput);
CxList tainedReflectionFuncObj = reflectionFuncObj * InvokeTargets;
result += tainedReflectionFuncObj;
	
// Tainted Method names
CxList reflectionMethodObj = ReflectionObjs.FindByType("ReflectionMethod");
reflectionMethodObj += reflectionClsObj;
reflectionMethodObj += All.FindByType("CxObject");

CxList getMethodTargets = methods.FindByShortName("getMethod*").GetTargetOfMembers() * reflectionMethodObj;

CxList affectedInvoke = methods.FindByShortName("invoke*").InfluencedBy(getMethodTargets);
CxList taintedInvoke = affectedInvoke.InfluencedBy(interactiveInput);
result+= taintedInvoke;</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>