<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>cc9164fd-bdc5-4991-8cc6-5b1c0a8bdd68</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1920 - R18 04 01 Dynamic Heap Memory Allocation</Title>
    <Category>CWE: 10806</Category>
    <Phase>CPP MISRA CPP</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  10806</h1>
  <iframe height="500" src="/content/10806" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1920
Cwe : 10806
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1289
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /*
 MISRA CPP RULE 18-4-1
 ------------------
  Dynamic heap memory allocation shall not be used.

  The Example below shows code with vulnerability: 

  			void foo(){          
 	 				int * i = new int; 	//Non-compliant
 	 				delete i; 			//Non-compliant  
 				}

*/

result = Find_Memory_Allocation() +
	All.FindByType(typeof(ObjectCreateExpr)).FindByRegex("new");</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>