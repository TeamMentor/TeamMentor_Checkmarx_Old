<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>eb5edd84-9d8d-4d52-8c9a-0378f7c0aa04</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>426 - LDAP Injection</Title>
    <Category>CWE: 90</Category>
    <Phase>CSharp High Risk</Phase>
    <Technology>CSharp</Technology>
    <Type>With Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>TeamMentor page for: LDAP Injection</h1>
  <iframe height="300" src="/html/LDAP_Injection" width="100%">
  </iframe>
  <h1>Content for CWE ID:  90</h1>
  <iframe height="500" src="/content/90" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 426
Cwe : 90
IsExecutable : true
IsEncrypted : false
Severity : 3
PackageId : 26
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> CxList de = All.FindByType(typeof(ObjectCreateExpr)).FindByName("*DirectoryEntry");
CxList ds = All.FindByType("*DirectorySearcher");
CxList inputs = Find_Interactive_Inputs();
CxList deParams = All.GetByAncs(de);

CxList sanitize = Find_Integers() + All.FindByName("*Regex.Replace") + 
	All.FindByMemberAccess("Regex.Replace");

result = deParams.InfluencedByAndNotSanitized(inputs, sanitize) + 
			 ds.InfluencedByAndNotSanitized(inputs, sanitize);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>