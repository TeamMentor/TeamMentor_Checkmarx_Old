<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>6a694bb5-cc7d-457d-be69-c7e66d5d0333</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1665 - Uncontrolled Memory Allocation</Title>
    <Category>CWE: 789</Category>
    <Phase>Java Low Visibility</Phase>
    <Technology>Java</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  789</h1>
  <iframe height="500" src="/content/789" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1665
Cwe : 789
IsExecutable : true
IsEncrypted : false
Severity : 1
PackageId : 36
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> // Get all objects that allocate memory at startup
CxList memAlloc = 
	All.FindByType("ConcurrentHashMap") +
	All.FindByType("HashMap") +
	All.FindByType("IdentityHashMap") +
	All.FindByType("WeakHashMap") +
	All.FindByType("LinkedHashMap") +
	All.FindByType("PrinterStateReasons");
memAlloc = All.GetByAncs(memAlloc).FindByType(typeof(ObjectCreateExpr));

// All inputs + maxInt value + random values
CxList inputs = Find_Inputs() + All.FindByMemberAccess("Integer.MAX_VALUE");
inputs += All.FindByMemberAccess("Random.Next*", false) + 
	All.FindByMemberAccess("Math.random", false) +
	Get_ESAPI().FindByMemberAccess("Randomizer.*"); //ESAPI

// Inputs influencing memory allocations.
// Notice - we currently have no sanitization.
result = memAlloc.DataInfluencedBy(inputs);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>