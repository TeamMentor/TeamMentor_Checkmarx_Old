<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>adaa1309-1fa2-4b74-b8da-b03bb6eea420</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1898 - R06 04 07 Find Switch Condition Bool</Title>
    <Category>CWE: 10783</Category>
    <Phase>CPP MISRA CPP</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  10783</h1>
  <iframe height="500" src="/content/10783" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1898
Cwe : 10783
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1289
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /*
 MISRA CPP RULE 6-4-7
 ------------------------------
 This query searches for bool types in switch conditions.
 
 The Example below shows code with vulnerability: 

		switch (x == 0) //Non-compliant
		{
			//...
		}

*/

CxList conditions = All.FindByFathers(All.FindByType(typeof(SwitchStmt)));
conditions -= conditions.FindByType(typeof(Case));
CxList boolConds = All.NewCxList();

//Remove +-*/%|&amp;&gt;&gt;</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>