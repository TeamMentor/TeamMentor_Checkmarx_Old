<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>86424d4e-a36c-46b1-81b4-04cc89af162b</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>1940 - R15 01 03 Empty Throw Outside Catch</Title>
    <Category>CWE: 10765</Category>
    <Phase>CPP MISRA CPP</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  10765</h1>
  <iframe height="500" src="/content/10765" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 1940
Cwe : 10765
IsExecutable : true
IsEncrypted : false
Severity : 0
PackageId : 1289
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> /* MISRA CPP RULE 15-1-3
 ------------------------------
 This query finds all empty throw statements that are outside of catch statement

 The following example shows what main code should look like: 
     
     void f1()     
     {
          throw;           //non-compliant
          try
          {  
              throw 1;
              throw;       //non-compliant
          }      
          catch(int i)
          {
              throw;       //compliant
          }
          throw;           //non-compliant    
     }
*/


//finds all throw statements
CxList throws = All.FindByType(typeof(ThrowStmt));	
//finds their parameters
CxList throwWithParams = All.FindByFathers(throws);
//makes sure that the throw is empty
CxList emptyThrowParam=throwWithParams.FindByName("CX_RETHROW");
CxList emptyThrow = emptyThrowParam.GetAncOfType(typeof(ThrowStmt));
//is the empty throw inside of catch
CxList emptyThrowsInCatch = All.GetByAncs(emptyThrow.GetAncOfType(typeof(Catch)));
CxList illegalThrow=emptyThrow.FindByType(typeof(ThrowStmt));
result = emptyThrow - emptyThrowsInCatch;</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>