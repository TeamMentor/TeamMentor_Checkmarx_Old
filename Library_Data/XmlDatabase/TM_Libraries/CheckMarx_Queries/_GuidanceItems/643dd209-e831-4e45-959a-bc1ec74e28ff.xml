<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>643dd209-e831-4e45-959a-bc1ec74e28ff</Id>
    <Library_Id>cdfef7b5-715e-4199-91cd-d9c380eb7e6b</Library_Id>
    <Title>274 - Heuristic Buffer Overflow malloc</Title>
    <Category>CWE: 120</Category>
    <Phase>CPP Heuristic</Phase>
    <Technology>CPP</Technology>
    <Type>No Landing Page</Type>
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Content for CWE ID:  120</h1>
  <iframe height="500" src="/content/120" width="100%">
  </iframe>
  <h1>Checkmarx Rule</h1>
  <div style="padding:10px">
    <pre>QueryId : 274
Cwe : 120
IsExecutable : true
IsEncrypted : false
Severity : 1
PackageId : 17
Status : Original
Type : Regular
</pre>
  </div>
  <h3>Source</h3>
  <div style="padding:10px">
    <pre> // The purpose of the query to protect the system from very big input malloc size
// for example maloc(100000000) can stuck the system

// The correct sanitization shoud be added

CxList malloc = Find_Methods().FindByShortName("malloc");

// Find input influence on size of copy
CxList sizeParam = All.GetByAncs(malloc) - malloc;

CxList sanitize = Find_All_Strlen();

result = sizeParam.InfluencedByAndNotSanitized(Find_Interactive_Inputs(), sanitize);</pre>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>